version: '3.8'

services:
  # Node.js Backend Service
  backend:
    build: .
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=ai_support_widget
      - DB_USER=postgres
      - DB_PASSWORD=password
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - FRONTEND_URL=${FRONTEND_URL:-http://localhost:3000}
    depends_on:
      - postgres
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    networks:
      - ai-widget-network

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=ai_support_widget
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    restart: unless-stopped
    networks:
      - ai-widget-network

  # pgAdmin (Database Admin UI)
  pgadmin:
    image: dpage/pgadmin4:latest
    ports:
      - "8081:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@example.com
      - PGADMIN_DEFAULT_PASSWORD=password
    depends_on:
      - postgres
    restart: unless-stopped
    networks:
      - ai-widget-network

volumes:
  postgres_data:

networks:
  ai-widget-network:
    driver: bridge
